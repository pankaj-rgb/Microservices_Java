spring.application.name=order-service
server.port=8083
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password=P@nkaj123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka

#enable actuators
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#resilience 4j properties to include
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory..slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

#timeout exception when we are facing error
resilience4j.timelimiter.instances.inventory.timeout-duration=3s

#resilience4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s

#spring.zipkin.base-url=http://localhost:9411
#spring.sleuth.sampler.probability=1.0

#Kafka properties
spring.kafka.bootstrap-server=localhost:9092
spring.kafka.template.default-topic=notificationTopic
#define topic group id

#define topic to be default in the message sent unless explicitly defined
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#define serializer for the data  also below one for the seralizaiton of object in json object
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#need to define the mapping for another application class, with token value as event
spring.kafka.producer.properties.spring.json.type.mapping=event:com.pankajproduct.order_service.event.OrderPlacedEvent